From 670095f47991c12861c100799fd9df07cfc29c85 Mon Sep 17 00:00:00 2001
From: Suraj Modi <modisuraj61@gmail.com>
Date: Mon, 11 May 2020 12:15:29 +0530
Subject: [PATCH] Create Patch File

---
 __pycache__/client3.cpython-36.pyc | Bin 0 -> 1096 bytes
 client3.py                         |  12 +++++++----
 client_test.py                     |  31 +++++++++++++++++++++++++++--
 3 files changed, 37 insertions(+), 6 deletions(-)
 create mode 100644 __pycache__/client3.cpython-36.pyc

diff --git a/__pycache__/client3.cpython-36.pyc b/__pycache__/client3.cpython-36.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..3b3d70b1f069a94ed119f643caa9e38dae44e09e
GIT binary patch
literal 1096
zcmYjQ&2Aev5GHrItCcJ{iQ}ILxv&L-L`WUE@Wn9FB(0qm2vEaG&;}urEY{-4T6wiA
zlT=}=axdzkuhKW@Gvts5;I*d!Ip)+;hm;e9#Qc%N;mkMWcB|F+^}|1J{-_i3FZp65
zs6Rr|?~q9%X+Z?_G7y26p$NTXg2_NcG8D07GWwH<nv7))Wde1XoCNCa*<a9rcux1p
z>zP=BaM%PoYz>zo8eRc5WOFj7b2_~0q_~z7v2wNp*U)=QT!$K5pVL=Ntco?UE;e8T
zR$%o$fg7?8tFQ*^u+eAhc#@LSvlni?0ST<gr8Ys{Y?FC#x%=b=*72NlTJNzYaxndB
zV9a>8+bybIRtzd_c6YXRwz{ViQ0EVG`Q7gq`A14f56O=RIYZh*(vOhMFkYKnP~)_q
zO=O6-(Tl*_?6V!tf?2phWOS2Uuo-pMjP)625>I#ep{nGh2RthZUiG;d051U~Nd8+^
zOh9u}@na}KWd@zN%uF_}^3re{X;bx1Y|T{T^eC4$8mqhq3p>*%?*mM+Lv7SAs?2mE
z8=X!n1IjJiIvz+D{&n<SsLECMH&II{{=3^9R3qr>iOPoECx<`pZ5rqeHVt}je!Dq7
z-|qH`97?l&Z+vc>$6)p`vqPU59@h<IBuwa4oK31)X!YF9ZaC@41G$RIj7o|Rr745w
z2<434BnVD8{hI#-hGXG*<)HEDrWwyld8r?9<(hNgGwuYUcIom-Ir19|)<j2}V4lxh
zybfAAMn+gd8CA=EH%&)bUZ&~v_EQIy<hL}>48Mb5?cUPgaID=+e+_D#Y2u@ypAEnN
zVb6y9kALj6#qvZIMSgTo0X`;eM7*#qGx-Pv8|tbQvBEm4k%*rD^7z?HOAkCopA#vw
z5u~Y&(CZj1MGd<swWxiHS;Lss7)l%WD>cfDWePHBW8Y*gVxOZ{?j!q_EBxX_xwiN=
v``1#MF932~R|}NxkMK<v@L&y>G)I<DKSLI>AgSXFmnjb!ZD4m3dL#HBQ6>{{

literal 0
HcmV?d00001

diff --git a/client3.py b/client3.py
index f1771c3..7e237f8 100644
--- a/client3.py
+++ b/client3.py
@@ -35,25 +35,29 @@ def getDataPoint(quote):
 	stock = quote['stock']
 	bid_price = float(quote['top_bid']['price'])
 	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
+	price = (bid_price+ask_price)/2
 	return stock, bid_price, ask_price, price
 
 def getRatio(price_a, price_b):
 	""" Get ratio of price_a and price_b """
 	""" ------------- Update this function ------------- """
 	""" Also create some unit tests for this function in client_test.py """
-	return 1
+	if (price_b == 0):
+		return 
+	return price_a/price_b
 
 # Main
 if __name__ == "__main__":
 
 	# Query the price once every N seconds.
-	for _ in iter(range(N)):
+	for _ in range(N):
 		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
 		""" ----------- Update to get the ratio --------------- """
+		prices = {}
 		for quote in quotes:
 			stock, bid_price, ask_price, price = getDataPoint(quote)
+			prices[stock]=price
 			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-		print ("Ratio %s" % getRatio(price, price))
+		print ("Ratio %s" % (getRatio(prices['ABC'], prices['DEF'])))
diff --git a/client_test.py b/client_test.py
index af2bf26..42b8d68 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,5 @@
 import unittest
-from client3 import getDataPoint
+from client3 import getDataPoint, getRatio
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -8,6 +8,8 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,11 +17,36 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
 
   """ ------------ Add more unit tests ------------ """
+  def test_getRatio_priceBZero(self):
+    price_a = 99.5
+    price_b = 0
+    self.assertIsNone(getRatio(price_a, price_b))
+ 
+  def test_getRatio_priceAZero(self):
+    price_a = 0
+    price_b = 202.43
+    self.assertEqual(getRatio(price_a, price_b), 0)
+ 
+  def test_getRatio_greaterThan1(self):
+    price_a = 159.65
+    price_b = 87.95
+    self.assertGreater(getRatio(price_a, price_b), 1)
+
+  def test_getRatio_LessThan1(self):
+    price_a = 50.21
+    price_b = 154.12
+    self.assertLess(getRatio(price_a, price_b), 1)
 
+  def test_getRatio_exactlyOne(self):
+    price_a = 470.28
+    price_b = 470.28
+    self.assertEqual(getRatio(price_a, price_b), 1)
 
+   
 
 if __name__ == '__main__':
     unittest.main()
-- 
2.17.1

